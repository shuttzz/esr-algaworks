#POSTGRESQL CONFIGURATION
spring.datasource.url=jdbc:postgresql://localhost:5433/algafoods_prod?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=postgres
#spring.datasource.password=
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgresPlusDialect

spring.jpa.show-sql=true

#Configurando o Pool de conexões com Hikari
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=10000

#spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#Propriedade do Jackson para falhar quando for fazer uma deserialização e a propriedade informada não existir
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#Habilita o spring a lançar uma exceção caso o usuário digite alguma url que não está mapeada no sistema
spring.mvc.throw-exception-if-no-handler-found=true

# Como estamos desenvolvendo uma API vamos desabilitar esse cara que é responsável por servir os arquivos estáticos da
# aplicação
spring.resources.add-mappings=false

restart.include.modelmapper=/modelmapper-(.*).jar

# Mudar a estratégia de escrita para snake case
# spring.jackson.property-naming-strategy=SNAKE_CASE

# Configurações referente a upload de arquivos, tamanho permitido de cada arquivo e tamanho máximo da requisição
#spring.servlet.multipart.max-file-size = 5MB
#spring.servlet.multipart.max-file-size = 3KB
#spring.servlet.multipart.max-request-size= 30MB
#spring.servlet.multipart.max-request-size= 5KB

algafood.storage.tipo-storage=s3

# Configuração dos locais de armazenagem
algafood.storage.local.diretorio-fotos=C:\\teste-fotos

# S3
#algafood.storage.s3.id-chave-acesso =
#algafood.storage.s3.chave-acesso-secreta =
algafood.storage.s3.bucket=algafood-bucket
algafood.storage.s3.regiao=us-east-1
algafood.storage.s3.diretorio-fotos=catalogo